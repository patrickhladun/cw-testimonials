<?phpclass CWT_CPT {    public $url = CWT_URL;    public $dir = CWT_DIR;    public $taxonomy;    public function __construct() {        add_action('init', [$this, 'register_cpt']);        add_action('init', [$this, 'register_taxonomies']);        $this->taxonomy = 'cwt_testimonial_category';        add_action( $this->taxonomy . '_add_form_fields', [$this, 'add_category_custom_fields'], 10, 2 );        add_action( $this->taxonomy . '_edit_form_fields', [$this, 'edit_category_custom_fields'], 10, 2 );        add_action( 'created_' . $this->taxonomy, [$this, 'save_taxonomy_custom_fields'], 10, 2 );        add_action( 'edited_' . $this->taxonomy, [$this, 'save_taxonomy_custom_fields'], 10, 2 );//        add_filter( 'manage_edit-' . $this->taxonomy . '_columns', [$this, 'update_columns']);//        add_action( 'manage_' . $this->taxonomy . '_custom_columns', [$this, 'manage_columns'], 10, 3);    }    public function register_cpt() {        $labels = [            'name'               => _x( 'Testimonials', 'post type general name', 'cityweb' ),            'singular_name'      => _x( 'Testimonial', 'post type singular name', 'cityweb' ),            'menu_name'          => _x( 'Testimonials', 'admin menu', 'cityweb' ),            'name_admin_bar'     => _x( 'Testimonial', 'add new on admin bar', 'cityweb' ),            'add_new'            => _x( 'Add New', 'testimonial', 'cityweb' ),            'add_new_item'       => __( 'Add New Testimonial', 'cityweb' ),            'new_item'           => __( 'New Testimonial', 'cityweb' ),            'edit_item'          => __( 'Edit Testimonial', 'cityweb' ),            'view_item'          => __( 'View Testimonial', 'cityweb' ),            'all_items'          => __( 'All Testimonials', 'cityweb' ),            'search_items'       => __( 'Search Testimonials', 'cityweb' ),            'parent_item_colon'  => __( 'Parent Testimonials:', 'cityweb' ),            'not_found'          => __( 'No books found.', 'cityweb' ),            'not_found_in_trash' => __( 'No books found in Trash.', 'cityweb' )        ];        $args = [            'labels'             => $labels,            'description'        => __( 'Description.', 'cityweb' ),            'public'             => false,            'publicly_queryable' => false,            'show_ui'            => true,            'show_in_menu'       => true,            'show_in_rest'       => true,            'query_var'          => true,            'rewrite'            => ['slug' => 'testimonial'],            'capability_type'    => 'post',            'has_archive'        => false,            'hierarchical'       => false,            'menu_position'      => null,            'taxonomies'         => ['cwt_testimonial_category'],            'supports'           => ['title', 'editor', 'author', 'thumbnail', 'excerpt', 'custom-fields']        ];        register_post_type( 'cwt_testimonial', $args );    }    public function register_taxonomies() {        $labels = [            'name' => _x( 'Categories', 'taxonomy general name' ),            'singular_name' => _x( 'Category', 'taxonomy singular name' ),            'search_items' =>  __( 'Search Categories', 'cityweb' ),            'all_items' => __( 'All Categories', 'cityweb' ),            'parent_item' => __( 'Parent Category', 'cityweb' ),            'parent_item_colon' => __( 'Parent Category:', 'cityweb' ),            'edit_item' => __( 'Edit Category', 'cityweb' ),            'update_item' => __( 'Update Category', 'cityweb' ),            'add_new_item' => __( 'Add New Category', 'cityweb' ),            'new_item_name' => __( 'New Category Name', 'cityweb' ),            'menu_name' => __( 'Categories', 'cityweb' ),        ];        $rewrites = [            'slug' => 'testimonial-category', // This controls the base slug that will display before each term            'with_front' => false, // Don't display the category base before "/locations/"            'hierarchical' => false // This will allow URL's like "/locations/boston/cambridge/"        ];        $args = [            'hierarchical'       => true,            'labels'             => $labels,            'rewrite'            => $rewrites,            'show_in_nav_menus'  => false,            'publicly_queryable' => false,            'show_ui'            => true,            'show_in_menu'       => true,            'show_in_rest'       => true,            'show_admin_column'  => true,        ];        register_taxonomy($this->taxonomy, 'cwt_testimonial', $args);    }    public function add_category_custom_fields() {        ?>        <div class="form-field">            <label for="cat_url">Url</label>            <input type="text" name="cat_url" id="cat_url">        </div>        <?php    }    public function edit_category_custom_fields($term) {        $value = get_term_meta($term->term_id, 'cat_url', true);        ?>        <tr class="form-field">            <th scope="row"><label for="cat_url">Url</label></th>            <td>                <input type="text" name="cat_url" id="cat_url" value="<?php echo esc_attr($value); ?>">            </td>        </tr>        <?php    }    public function save_taxonomy_custom_fields( $term_id ) {        update_term_meta($term_id, 'cat_url', sanitize_text_field($_POST['cat_url']));    }    // add columns: https://www.youtube.com/watch?v=qcPcml8kkuk    public function update_columns($columns) {        if($columns['description']) {            unset($columns['description']);        }        $columns['caturlcolumn'] = 'URL';        return $columns;    }    public function manage_columns($string, $columns, $term_id) {        switch ($columns) {            case 'cat_url_column':                echo get_term_meta($term_id, 'cat_url-caturlcolumn', true);                break;            default:                break;        }    }}