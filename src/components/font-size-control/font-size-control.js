import { __ } from '@wordpress/i18n';import { Fragment, useState } from '@wordpress/element';import {RangeControl, SelectControl} from '@wordpress/components';import DeviceSwitch from '../devices-switch/device-switch';import './style.scss';const FontSizeControl = (props) => {    const { value, units, min, max, onChange } = props;    const [device, setDevice] = useState(wp.data.select('core/edit-post').__experimentalGetPreviewDeviceType());    const [fontSize, setFontSize] = useState(value);    const handleUpdate = (value, item) => {        setFontSize({...fontSize, [item]: value});        const update = {...fontSize, [item]: value};        onChange(update);    }    const handleDeviceChange = (device) => {        setDevice(device)    }    return (        <Fragment>            <div className="cwt-responsive-setting-header">                <DeviceSwitch                    label='Font Size'                    device={device}                    onChange={handleDeviceChange}                />            </div>            <div className="font-size-control-wrapper">                <div className="font-size-select">                    { device === 'Desktop' &&                        <RangeControl                            value={fontSize.desktop}                            onChange={(value) => { handleUpdate(value, 'desktop') }}                            min={min}                            max={max}                        />                    }                    { device === 'Tablet' &&                        <RangeControl                            value={fontSize.tablet}                            onChange={(value) => { handleUpdate(value, 'tablet') }}                            min={min}                            max={max}                        />                    }                    { device === 'Mobile' &&                        <RangeControl                            value={fontSize.mobile}                            onChange={(value) => { handleUpdate(value, 'mobile') }}                            min={min}                            max={max}                        />                    }                </div>                <SelectControl                    value={fontSize.unit}                    options={units.map((item, index) => {                        return {                            label: item.label,                            value: item.value,                            key: index                        };                    })}                    onChange={(value) => { handleUpdate(value, 'unit') }}                    className='cwt-unit-select'                />            </div>        </Fragment>    );}export default FontSizeControl;